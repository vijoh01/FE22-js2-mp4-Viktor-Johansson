{"mappings":"ovBACA,MAAMA,gBAAuBC,SAASC,cAAc,YAC9CC,YAAmBF,SAASC,cAAc,eAE1CE,UAAsB,CAAC,QAAS,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEtGC,aAAgBC,IAClB,MAAMC,EAAcN,SAASO,cAAc,UAC3CD,EAAOE,UAAY,SAAWH,EAC9BC,EAAOG,UAAYJ,EACnBN,gBAAgBW,OAAOJ,EAAA,EAG3BH,UAAUQ,SAAQC,IACdR,aAAaQ,EAAA,IAGjB,IAAIC,MAAgB,EAChBC,KAAgB,GACpBf,gBAAgBgB,iBAAiB,SAAUC,QAIvC,GAHAA,MAAMC,kBACND,MAAME,iBAEFF,MAAMG,OAAOC,UAAUC,SAAS,SAAWL,MAAMG,OAAOV,WAMxD,OALII,OACAC,KAAO,GACPZ,YAAYO,UAAYK,KACxBD,MAAO,GAEHG,MAAMG,OAAOV,WACjB,IAAK,QACDK,KAAO,GACPZ,YAAYO,UAAYK,KACxB,MACJ,IAAK,IACD,IACI,MAAMQ,OAASC,KAAKT,MACpBA,MAAQ,IAAIQ,SACZpB,YAAYO,UAAYK,KACxBD,MAAO,CACX,CAAE,MAAOW,GACLtB,YAAYO,UAAY,QACxBI,MAAO,CACX,CACA,MACJ,QACIC,MAAQE,MAAMG,OAAOV,UACrBP,YAAYO,UAAYK,KAIpC,G","sources":["src/ts/index.ts"],"sourcesContent":["\r\nconst buttonContainer: any = document.querySelector('.buttons');\r\nconst screenInput: any = document.querySelector('.screenText');\r\n\r\nconst buttonArr: string[] = [\"Clear\", \"/\", \"7\", \"8\", \"9\", \"*\", \"4\", \"5\", \"6\", \"-\", \"1\", \"2\", \"3\", \"+\", \"0\", \"=\"];\r\n\r\nconst createButton = (value: string) => {\r\n    const button: any = document.createElement(\"button\");\r\n    button.className = \"button\" + value;\r\n    button.innerText = value;\r\n    buttonContainer.append(button);\r\n}\r\n\r\nbuttonArr.forEach(name => {\r\n    createButton(name);\r\n})\r\n\r\nlet done: boolean = false;\r\nlet text : string = \"\";\r\nbuttonContainer.addEventListener(\"click\", (event: any) => {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n\r\n    if (event.target.classList.contains(\"button\" + event.target.innerText)) {\r\n        if (done) {\r\n            text = \"\";\r\n            screenInput.innerText = text;\r\n            done = false;\r\n        }\r\n        switch (event.target.innerText) {\r\n            case \"Clear\":\r\n                text = \"\";\r\n                screenInput.innerText = text;\r\n                break;\r\n            case \"=\":\r\n                try {\r\n                    const result = eval(text);\r\n                    text += `=${result}`\r\n                    screenInput.innerText = text;\r\n                    done = true;\r\n                } catch (error) {\r\n                    screenInput.innerText = \"Error\";\r\n                    done = true;\r\n                }\r\n                break;\r\n            default:\r\n                text += event.target.innerText\r\n                screenInput.innerText = text;\r\n                break;\r\n        }\r\n\r\n    }\r\n});\r\n\r\n\r\n\r\n"],"names":["buttonContainer","document","querySelector","screenInput","buttonArr","createButton","value","button","createElement","className","innerText","append","forEach","name","done","text","addEventListener","event","stopPropagation","preventDefault","target","classList","contains","result","eval","error"],"version":3,"file":"index.23c72a3e.js.map"}